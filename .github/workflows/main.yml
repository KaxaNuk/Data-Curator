# Run tests and, if successful, build and deploy the Docker image
# cf. https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build Status

on:
  push:
    branches: [ "main", "dev" ]
    tags:
      - "*"
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  # @todo: change this when we move the repo to the main KaxaNuk org
  IMAGE_NAME: kaxanuk-community/data-curator

permissions:
  contents: read
  packages: write

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pdm
          pdm install --dev --global --no-lock --no-self --project .
          pip uninstall --yes pdm

      - name: Lint with ruff
        run: |
          # stop the build if linting fails 
          ruff check .

      - name: Test with pytest
        run: |
          pytest


  check_current_branch:
    # cf. https://stackoverflow.com/a/72959712/5220723
    runs-on: ubuntu-latest
    needs: run_tests
    outputs:
      branch: ${{ steps.check_branch.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_branch
        # 1. Get the list of branches ref where this tag exists
        # 2. Remove 'origin/' from that result
        # 3. Put that string in output
        # => We can now use function 'contains(list, item)''
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, set 'raw' to be the triggering ref (branch)
            raw="${{ github.ref }}"
          else
            # Otherwise, use the git command to retrieve related branches
            raw=$(git branch -r --contains ${{ github.ref }})
          fi
          branch="$(echo ${raw//origin\//} | tr -d '\n')"
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "Branches where this tag exists : $branch."


  deploy:
    if: |
      startsWith(github.ref, 'refs/tags/')
      || contains(needs.check_current_branch.outputs.branch, 'dev')
    needs: check_current_branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push dev image
        # dev images only set `dev` tag
        if: contains(needs.check_current_branch.outputs.branch, 'dev')
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BUILD_ENV=dev
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push production image
        # prod images set commit tag and `latest`
        if: contains(needs.check_current_branch.outputs.branch, 'main')
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BUILD_ENV=prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}